node {

  def ledger_kind = '/rmac'
  def compose_cmd
  def ledger_path_prefix
  def scmVars

  properties([
    [$class: 'BuildDiscarderProperty',
              strategy: [$class: 'LogRotator', numToKeepStr: '5']],
    pipelineTriggers([[$class: "TimerTrigger", spec: "H(25-35) 6 * * *"]])
  ])

  ansiColor('xterm') {

    stage ('Clone') {
      scmVars = checkout scm
      def branch_name = scmVars.GIT_BRANCH.replace("origin/", "")
      
      ledger_path_prefix = ledger_kind + '/' + branch_name;
      compose_cmd = 'docker-compose -f web.prod.yml -p ' + ledger_path_prefix

      echo 'Branch name: ' + branch_name

      println env.JOB_NAME
    }

    withEnv([
      "LEDGER_PATH_PREFIX="    + ledger_path_prefix,
      "LEDGER_HOST="           + env.LEDGER_HOST,
      //"LEDGER_DUMP_DIRECTORY=" + env.LEDGER_DUMP_DIRECTORY
      //"LEDGER_SETUP_CONFIG="   + './ledgersetup-quickrestore.yml'
    ]) {
    
    stage ('Compose') {
      dir('.cicd/docker') {
	  sh compose_cmd + ' up -d --force-recreate --build'
      }
    }
    
    }
  }
}
