node {

  def ledger_kind = 'rmac'

  def compose_project = ledger_kind + '_' + env.BRANCH_NAME
  
  def compose_cmd = 'docker-compose -f web.prod.local -p ' + compose_project

  properties([
    [$class: 'BuildDiscarderProperty',
              strategy: [$class: 'LogRotator', numToKeepStr: '5']],
    pipelineTriggers([[$class: "TimerTrigger", spec: "H(25-35) 6 * * *"]])
  ])

  ansiColor('xterm') {

    stage ('Clone') {
      checkout scm
    }

    withEnv([
      //"LEDGER_PATH_PREFIX="    + ledger_path_prefix,
      //"LEDGER_HOST="           + env.LEDGER_HOST,
      //"LEDGER_DUMP_DIRECTORY=" + env.LEDGER_DUMP_DIRECTORY
      //"LEDGER_SETUP_CONFIG="   + './ledgersetup-quickrestore.yml'
    ]) {
    
    stage ('Compose') {
      dir('.cicd/docker') {
	  sh "ls -l"
	  sh compose_cmd + ' up -d --force-recreate --build'
	}
    }
    
    }
  }
}
