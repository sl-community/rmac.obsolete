node {

  def ledger_kind = '/sl-community/rmac'

  def ledger_path_prefix    = ledger_kind + '/' + env.BRANCH_NAME
  
  def compose_cmd = 'docker-compose -p ' + ledger_path_prefix

  properties([
    [$class: 'BuildDiscarderProperty',
              strategy: [$class: 'LogRotator', numToKeepStr: '5']],
    pipelineTriggers([[$class: "TimerTrigger", spec: "H/5 * * * *"]])
  ])
	     
  ansiColor('xterm') {

    stage ('Clone') {
      checkout scm
    }
    
    withEnv([
      "LEDGER_PATH_PREFIX="    + ledger_path_prefix,
      "LEDGER_HOST="           + env.LEDGER_HOST,
      "LEDGER_DUMP_DIRECTORY=" + env.LEDGER_DUMP_DIRECTORY
    ]) {
    
    stage ('Compose') {
      dir('.cicd/sql-ledger') {
	  sh compose_cmd + ' up -d --force-recreate --build'
	}
    }

    stage ('Initialize') {
      dir('.cicd/sql-ledger') {
        sh compose_cmd + ' exec -T -u www-data web ledgersetup.pl ' + ledger_path_prefix
      }
    }
    
    }
  }
}
